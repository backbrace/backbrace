{
    "!name": "backbrace-types",
    "!define": {},
    "void": {
        "!type": "<top>",
        "!doc": "void"
    },
    "T": {
        "!type": "Type?",
        "!doc": "Any type."
    },
    "window": {
        "!type": "<top>",
        "!url": "https://developer.mozilla.org/en/docs/DOM/window",
        "!doc": "The window object represents a window containing a DOM document."
    },
    "JQueryPromise": {
        "!url": "http://api.jquery.com/jQuery.Deferred/",
        "!doc": "A constructor function that returns a chainable utility object with methods to register multiple callbacks into callback queues, invoke callback queues, and relay the success or failure state of any synchronous or asynchronous function.",
        "prototype": {
            "always": "fn(callback: fn()) -> +jQuery.Promise",
            "done": "fn(callback: fn()) -> +jQuery.Promise",
            "fail": "fn(callback: fn()) -> +jQuery.Promise",
            "isRejected": "fn() -> bool",
            "isResolved": "fn() -> bool",
            "pipe": "fn(doneFilter?: fn(), failFilter?: fn()) -> +jQuery.Promise",
            "promise": "fn(target: ?) -> +jQuery.Deferred",
            "state": "fn() -> string",
            "then": "fn(doneFilter: fn(), failFilter?: fn(), progressFilter?: fn()) -> +jQuery.Promise"
        }
    }
}